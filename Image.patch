--- target/linux/x86/image/Makefile	2020-03-30 12:35:10.000000000 +0800
+++ OpenWrt-UEFI-Support/src/target/linux/x86/image/Makefile	2020-03-30 12:43:23.744290515 +0800
@@ -36,6 +36,7 @@
   GRUB_TERMINAL_CONFIG := terminal_input $(GRUB_TERMINALS); terminal_output $(GRUB_TERMINALS)
 endif
 
+EFI_SIGNATURE:=$(strip $(shell uuidgen | tr '[a-z]' '[A-Z]'))
 ROOTPART:=$(call qstrip,$(CONFIG_TARGET_ROOTFS_PARTNAME))
 ROOTPART:=$(if $(ROOTPART),$(ROOTPART),PARTUUID=$(IMG_PART_SIGNATURE)-02)
 
@@ -44,6 +45,26 @@
 
 BOOTOPTS:=$(call qstrip,$(CONFIG_GRUB_BOOTOPTS))
 
+define Build/efi
+	$(CP) $(KDIR)/$(KERNEL_NAME) $@.boot/boot/vmlinuz
+	-$(CP) $(STAGING_DIR_ROOT)/boot/. $@.boot/boot/
+
+	SIGNATURE="$(EFI_SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_efi.sh \
+		$@ \
+		$(CONFIG_TARGET_KERNEL_PARTSIZE) $@.boot \
+		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(IMAGE_ROOTFS) \
+		1 $@.grub2/kernel.efi \
+		256
+
+	# Convert the MBR partition to GPT and set EFI ROOTFS signature
+	dd if=/dev/zero of=$@ bs=512 count=34 conv=notrunc oflag=append
+	sgdisk -g $@
+	sgdisk -t 3:EF00 $@
+	sgdisk -u 2:$(EFI_SIGNATURE) $@
+
+	echo -e -n "\xeb\x63\x99" | dd of=$@  bs=4 conv=notrunc
+endef
+
 define Build/combined
 	$(CP) $(KDIR)/$(KERNEL_NAME) $@.boot/boot/vmlinuz
 	-$(CP) $(STAGING_DIR_ROOT)/boot/. $@.boot/boot/
@@ -54,6 +75,23 @@
 		256
 endef
 
+define Build/grub-efi-config
+	rm -fR $@.boot
+	$(INSTALL_DIR) $@.boot/boot/grub
+	sed \
+		-e 's#@SERIAL_CONFIG@#$(strip $(GRUB_SERIAL_CONFIG))#g' \
+		-e 's#@TERMINAL_CONFIG@#$(strip $(GRUB_TERMINAL_CONFIG))#g' \
+		-e 's#@ROOTPART@#root=PARTUUID=$(EFI_SIGNATURE) rootwait#g' \
+		-e 's#@CMDLINE@#$(BOOTOPTS) $(GRUB_CONSOLE_CMDLINE)#g' \
+		-e 's#@TIMEOUT@#$(GRUB_TIMEOUT)#g' \
+		-e 's#@TITLE@#$(GRUB_TITLE)#g' \
+		-e 's#set root.*#search --file /boot/grub/$(IMG_PART_SIGNATURE).cfg --set=root#g' \
+		./grub-$(1).cfg > $@.boot/boot/grub/grub.cfg
+	$(CP) $@.boot/boot/grub/grub.cfg $@.boot/boot/grub/$(IMG_PART_SIGNATURE).cfg
+	echo "search --file /boot/grub/$(IMG_PART_SIGNATURE).cfg --set=root" > $(STAGING_DIR_HOST)/lib/grub/grub2.efi/efi/boot/grub.cfg
+	echo "configfile /boot/grub/grub.cfg" >> $(STAGING_DIR_HOST)/lib/grub/grub2.efi/efi/boot/grub.cfg
+endef
+
 define Build/grub-config
 	rm -fR $@.boot
 	$(INSTALL_DIR) $@.boot/boot/grub
@@ -81,6 +119,30 @@
 		$@
 endef
 
+define Build/efi-partition
+	rm -fR $@.grub2
+	$(INSTALL_DIR) $@.grub2
+	$(CP) $(STAGING_DIR_HOST)/lib/grub/i386-pc/*.img \
+		$(STAGING_DIR_HOST)/lib/grub/grub2-$(GRUB2_VARIANT)/core.img \
+		$@.grub2/
+	mkfs.fat -C $@.grub2/kernel.efi -S 512 1024
+	mcopy -s -i $@.grub2/kernel.efi $(STAGING_DIR_HOST)/lib/grub/grub2.efi/* ::/
+endef
+
+define Build/grub-efi-install
+	rm $@.grub2/kernel.efi
+	echo '(hd0) $@' > $@.grub2/device.map
+	$(STAGING_DIR_HOST)/bin/grub-bios-setup-efi \
+		--device-map="$@.grub2/device.map" \
+		-d "$@.grub2" \
+		-r "hd0,gpt1" \
+		$@
+endef
+
+define Build/iso-efi
+	# xxx
+endef
+
 define Build/iso
 	$(CP) $(KDIR)/$(KERNEL_NAME) $@.boot/boot/vmlinuz
 	cat \
@@ -99,12 +161,38 @@
   IMAGE/combined.img.gz := grub-config pc | combined | grub-install | gzip
   IMAGE/combined.vdi := grub-config pc | combined | grub-install | qemu-image vdi
   IMAGE/combined.vmdk := grub-config pc | combined | grub-install | qemu-image vmdk
+  IMAGE/combined.qcow2 := grub-config pc | combined | grub-install | qemu-image qcow2
   IMAGE/rootfs.img := append-rootfs
   IMAGE/rootfs.img.gz := append-rootfs | gzip
+  IMAGE/uefi-gpt.img := grub-efi-config pc | efi-partition | efi
+  IMAGE/uefi-gpt.img.gz := grub-efi-config pc | efi-partition | efi | gzip
+  IMAGE/uefi-gpt.vdi := grub-efi-config pc | efi-partition | efi | qemu-image vdi
+  IMAGE/uefi-gpt.vmdk := grub-efi-config pc | efi-partition | efi | qemu-image vmdk
+  IMAGE/uefi-gpt.qcow2 := grub-efi-config pc | efi-partition | efi | qemu-image qcow2
   ifeq ($(CONFIG_TARGET_IMAGES_GZIP),y)
-    IMAGES := combined.img.gz rootfs.img.gz
+    ifeq ($(CONFIG_GRUB_IMAGES)$(CONFIG_EFI_IMAGES),yy)
+        IMAGES := uefi-gpt.img.gz rootfs.img.gz
+        IMAGES += combined.img.gz rootfs.img.gz
+    else
+      ifeq ($(CONFIG_GRUB_IMAGES),y)
+        IMAGES := combined.img.gz rootfs.img.gz
+      endif
+      ifeq ($(CONFIG_EFI_IMAGES),y)
+        IMAGES := uefi-gpt.img.gz rootfs.img.gz
+      endif
+    endif
   else
-    IMAGES := combined.img rootfs.img
+    ifeq ($(CONFIG_GRUB_IMAGES)$(CONFIG_EFI_IMAGES),yy)
+        IMAGES := uefi-gpt.img rootfs.img
+        IMAGES += combined.img rootfs.img
+    else
+        ifeq ($(CONFIG_GRUB_IMAGES),y)
+          IMAGES := combined.img rootfs.img
+        endif
+        ifeq ($(CONFIG_EFI_IMAGES),y)
+          IMAGES := uefi-gpt.img rootfs.img
+        endif
+    endif
   endif
   KERNEL := kernel-bin
   KERNEL_INSTALL := 1
@@ -113,10 +201,20 @@
     ARTIFACTS := image.iso
   endif
   ifeq ($(CONFIG_VDI_IMAGES),y)
-    IMAGES += combined.vdi
+    ifeq ($(CONFIG_EFI_IMAGES),y)
+      IMAGES += uefi-gpt.vdi
+    endif
+    ifeq ($(CONFIG_GRUB_IMAGES),y)
+      IMAGES += combined.vdi
+    endif
   endif
   ifeq ($(CONFIG_VMDK_IMAGES),y)
-    IMAGES += combined.vmdk
+    ifeq ($(CONFIG_EFI_IMAGES),y)
+      IMAGES += uefi-gpt.vmdk
+    endif
+    ifeq ($(CONFIG_GRUB_IMAGES),y)
+      IMAGES += combined.vmdk
+    endif
   endif
 endef
 
@@ -139,4 +237,3 @@
 endif
 
 $(eval $(call BuildImage))
-
