--- target/linux/x86/image/Makefile	2021-10-19 21:25:59.853341069 +0800
+++ OpenWrt-UEFI-Support/src/target/linux/x86/image/Makefile	2021-10-19 21:18:41.000000000 +0800
@@ -1,4 +1,4 @@
-# 
+#
 # Copyright (C) 2006-2012 OpenWrt.org
 #
 # This is free software, licensed under the GNU General Public License v2.
@@ -41,36 +41,81 @@
 endif
 
 SIGNATURE:=$(shell perl -e 'printf("%08x", rand(0xFFFFFFFF))')
+EFI_SIGNATURE:=$(strip $(shell uuidgen | sed "s/[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]$$/0002/" | tr '[a-z]' '[A-Z]'))
 ROOTPART:=$(call qstrip,$(CONFIG_TARGET_ROOTFS_PARTNAME))
 ROOTPART:=$(if $(ROOTPART),$(ROOTPART),PARTUUID=$(SIGNATURE)-02)
+EFI_ROOTPART:=$(call qstrip,$(CONFIG_TARGET_ROOTFS_PARTNAME))
+EFI_ROOTPART:=$(if $(EFI_ROOTPART),$(EFI_ROOTPART),PARTUUID=$(EFI_SIGNATURE))
 
 GRUB_TIMEOUT:=$(call qstrip,$(CONFIG_GRUB_TIMEOUT))
 GRUB_TITLE:=$(call qstrip,$(CONFIG_GRUB_TITLE))
 
-ifneq ($(CONFIG_GRUB_IMAGES),)
+BOOTOPTS:=$(call qstrip,$(CONFIG_GRUB_BOOTOPTS))
 
-  BOOTOPTS:=$(call qstrip,$(CONFIG_GRUB_BOOTOPTS))
+define Image/cmdline/ext4
+  root=$(ROOTPART) rootfstype=ext4 rootwait
+endef
 
-  define Image/cmdline/ext4
-    root=$(ROOTPART) rootfstype=ext4 rootwait
-  endef
+define Image/cmdline/squashfs
+  root=$(ROOTPART) rootfstype=squashfs rootwait
+endef
 
-  define Image/cmdline/squashfs
-    root=$(ROOTPART) rootfstype=squashfs rootwait
-  endef
+# UEFI Start
+ifneq ($(CONFIG_EFI_IMAGES),)
+
+define Image/cmdline/efi
+    $(subst $(SIGNATURE)-02,$2,$(call Image/cmdline/$(1)))
+endef
+define Image/Build/efi
+	# Build the efi grub version
+	rm -rf $(KDIR)/grub2.efi/ || true
+	$(INSTALL_DIR) $(KDIR)/grub2.efi/efi/boot/
+
+	# Copy the EFI grub binary
+	$(CP) $(STAGING_DIR_IMAGE)/grub2/boot$(if $(CONFIG_x86_64),x64,ia32).efi $(KDIR)/grub2.efi/efi/boot/
+
+	$(INSTALL_DIR) $(KDIR)/grub2.efi/boot/grub $(KDIR)/grub2
+	$(CP) $(KDIR)/bzImage $(KDIR)/grub2.efi/boot/vmlinuz
+	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img' > $(KDIR)/grub2/device.map
+	sed \
+		-e 's#@SERIAL_CONFIG@#$(strip $(GRUB_SERIAL_CONFIG))#g' \
+		-e 's#@TERMINAL_CONFIG@#$(strip $(GRUB_TERMINAL_CONFIG))#g' \
+		-e 's#@GPT_ROOTPART@#$(call Image/cmdline/efi,$(1),$(EFI_SIGNATURE))#g' \
+		-e 's#@CMDLINE@#$(BOOTOPTS) $(GRUB_CONSOLE_CMDLINE)#g' \
+		-e 's#@TIMEOUT@#$(GRUB_TIMEOUT)#g' \
+		-e 's#@TITLE@#$(GRUB_TITLE)#g' \
+		./grub-efi.cfg > $(KDIR)/grub2.efi/boot/grub/grub.cfg
+
+	SIGNATURE="$(EFI_SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_efi.sh \
+		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img \
+		$(CONFIG_TARGET_KERNEL_PARTSIZE) $(KDIR)/grub2.efi \
+		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(KDIR)/root.$(1) \
+		256
 
-  define Image/Build/grub2
+	# Convert the MBR partition to GPT and set EFI ROOTFS signature
+	dd if=/dev/zero of="$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img" bs=512 count=34 conv=notrunc oflag=append
+	sgdisk -g "$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img"
+	sgdisk -t 1:EF00 "$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img"
+	sgdisk -u 2:$(EFI_SIGNATURE) "$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img"
+
+	echo -e -n "\xeb\x63\x99" | dd of="$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img"  bs=4 conv=notrunc
+
+endef
+endif
+
+ifneq ($(CONFIG_GRUB_IMAGES),)
+define Image/Build/grub2
 	# left here because the image builder doesnt need these
 	$(INSTALL_DIR) $(KDIR)/root.grub/boot/grub $(KDIR)/grub2
 	$(CP) $(KDIR)/bzImage $(KDIR)/root.grub/boot/vmlinuz
 	grub-mkimage \
 		-p /boot/grub \
-		-d $(STAGING_DIR_HOST)/lib/grub/i386-pc \
+		-d $(PKG_BUILD_DIR)/grub-pc/grub-2.04/grub-core \
 		-o $(KDIR)/grub2/core.img \
 		-O i386-pc \
 		-c ./grub-early.cfg \
 		$(GRUB2_MODULES)
-	$(CP) $(STAGING_DIR_HOST)/lib/grub/i386-pc/*.img $(KDIR)/grub2/
+	$(CP) $(PKG_BUILD_DIR)/grub-pc/grub-2.04/grub-core/*.img $(KDIR)/grub2/
 	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img' > $(KDIR)/grub2/device.map
 	sed \
 		-e 's#@SERIAL_CONFIG@#$(strip $(GRUB_SERIAL_CONFIG))#g' \
@@ -90,7 +135,7 @@
 		-d "$(KDIR)/grub2" \
 		-r "hd0,msdos1" \
 		"$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img"
-  endef
+endef
 endif
 
 define Image/Build/squashfs
@@ -102,13 +147,13 @@
 	$(CP) $(KDIR)/bzImage $(KDIR)/root.grub/boot/vmlinuz
 	grub-mkimage \
 		-p /boot/grub \
-		-d $(STAGING_DIR_HOST)/lib/grub/i386-pc \
+		-d $(PKG_BUILD_DIR)/grub-pc/grub-2.04/grub-core \
 		-o $(KDIR)/grub2/eltorito.img \
 		-O i386-pc \
 		-c ./grub-early.cfg \
 		$(GRUB2_MODULES_ISO)
 	cat \
-		$(STAGING_DIR_HOST)/lib/grub/i386-pc/cdboot.img \
+		$(PKG_BUILD_DIR)/grub-pc/grub-2.04/grub-core/cdboot.img \
 		$(KDIR)/grub2/eltorito.img \
 		> $(KDIR)/root.grub/boot/grub/eltorito.img
 	sed \
@@ -130,6 +175,12 @@
 		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
 		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi
   endef
+  define Image/Build/vdi_efi
+	rm $(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.vdi || true
+	qemu-img convert -f raw -O vdi \
+		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img \
+		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.vdi
+  endef
 endif
 
 ifneq ($(CONFIG_VMDK_IMAGES),)
@@ -139,11 +190,22 @@
 		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
 		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vmdk
   endef
+  define Image/Build/vmdk_efi
+	rm $(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.vmdk || true
+	qemu-img convert -f raw -O vmdk \
+		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img \
+		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.vmdk
+  endef
 endif
 
 define Image/Build/gzip
-	gzip -f9n $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img
 	gzip -f9n $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img
+ifneq ($(CONFIG_GRUB_IMAGES),)
+	gzip -f9n $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img
+endif
+ifneq ($(CONFIG_EFI_IMAGES),)
+	gzip -f9n $(BIN_DIR)/$(IMG_PREFIX)-$(1)-combined-efi.img
+endif
 endef
 
 ifneq ($(CONFIG_TARGET_IMAGES_GZIP),)
@@ -170,9 +232,16 @@
 define Image/Build
 	$(call Image/Build/$(1))
   ifneq ($(1),iso)
+    ifneq ($(CONFIG_GRUB_IMAGES),)
 	$(call Image/Build/grub2,$(1))
 	$(call Image/Build/vdi,$(1))
 	$(call Image/Build/vmdk,$(1))
+    endif
+    ifneq ($(CONFIG_EFI_IMAGES),)
+	$(call Image/Build/efi,$(1))
+	$(call Image/Build/vdi_efi,$(1))
+	$(call Image/Build/vmdk_efi,$(1))
+    endif
 	$(CP) $(KDIR)/root.$(1) $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img
   else
 	$(CP) $(KDIR)/root.iso $(BIN_DIR)/$(IMG_PREFIX).iso
