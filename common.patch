--- package/base-files/files/lib/upgrade/common.sh	2020-02-12 14:30:07.000000000 +0800
+++ OpenWrt-UEFI-Support/src/package/base-files/files/lib/upgrade/common.sh	2020-02-13 22:24:03.618004811 +0800
@@ -117,9 +117,34 @@
 		esac
 
 		case "$disk" in
-			PARTUUID=[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]-02)
+			/dev/*)
+				uevent="/sys/class/block/${bootdisk##*/}/uevent"
+			;;
+		esac
+
+		case "$rootpart" in
+			PARTUUID=[A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9])
 				uuid="${disk#PARTUUID=}"
-				uuid="${uuid%-02}"
+				uuid="${uuid}"
+				export BOOTPART=$(blkid | grep "PARTUUID=" | {
+					local pdisk puuid
+					while read -r line
+					do
+					        pdisk=${line%%:*}
+					        puuid=${line##*PARTUUID=\"}
+					        puuid=${puuid%%\"*}
+						puuid=$(echo "$puuid" | tr '[a-z]' '[A-Z]')
+						if [ "$uuid" = "$puuid" ]; then
+							echo -n "${pdisk%[0-9]}1"
+							return 0
+						fi
+					done
+				})
+				return 0
+			;;
+			PARTUUID=[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]-[a-f0-9][a-f0-9])
+				uuid="${rootpart#PARTUUID=}"
+				uuid="${uuid%-[a-f0-9][a-f0-9]}"
 				for disk in $(find /dev -type b); do
 					set -- $(dd if=$disk bs=1 skip=440 count=4 2>/dev/null | hexdump -v -e '4/1 "%02x "')
 					if [ "$4$3$2$1" = "$uuid" ]; then
@@ -129,40 +154,15 @@
 				done
 			;;
 			/dev/*)
-				uevent="/sys/class/block/${disk##*/}/uevent"
+				export BOOTPART="${disk%[0-9]}1"
+				return 0
 			;;
 		esac
-
-		if [ -e "$uevent" ]; then
-			while read line; do
-				export -n "$line"
-			done < "$uevent"
-			export BOOTDEV_MAJOR=$MAJOR
-			export BOOTDEV_MINOR=$MINOR
-			return 0
-		fi
 	fi
 
 	return 1
 }
 
-export_partdevice() {
-	local var="$1" offset="$2"
-	local uevent line MAJOR MINOR DEVNAME DEVTYPE
-
-	for uevent in /sys/class/block/*/uevent; do
-		while read line; do
-			export -n "$line"
-		done < "$uevent"
-		if [ $BOOTDEV_MAJOR = $MAJOR -a $(($BOOTDEV_MINOR + $offset)) = $MINOR -a -b "/dev/$DEVNAME" ]; then
-			export "$var=$DEVNAME"
-			return 0
-		fi
-	done
-
-	return 1
-}
-
 hex_le32_to_cpu() {
 	[ "$(echo 01 | hexdump -v -n 2 -e '/2 "%x"')" == "3031" ] && {
 		echo "${1:0:2}${1:8:2}${1:6:2}${1:4:2}${1:2:2}"
@@ -224,27 +224,3 @@
 	fi
 	[ $? -ne 0 ] && exit 1
 }
-
-do_upgrade_stage2() {
-	v "Performing system upgrade..."
-	if [ -n "$do_upgrade" ]; then
-		eval "$do_upgrade"
-	elif type 'platform_do_upgrade' >/dev/null 2>/dev/null; then
-		platform_do_upgrade "$IMAGE"
-	else
-		default_do_upgrade "$IMAGE"
-	fi
-
-	if [ "$SAVE_CONFIG" -eq 1 ] && type 'platform_copy_config' >/dev/null 2>/dev/null; then
-		platform_copy_config
-	fi
-
-	v "Upgrade completed"
-	sleep 1
-
-	v "Rebooting system..."
-	umount -a
-	reboot -f
-	sleep 5
-	echo b 2>/dev/null >/proc/sysrq-trigger
-}
