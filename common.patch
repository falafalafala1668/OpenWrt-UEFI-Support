--- package/base-files/files/lib/upgrade/common.sh	2020-02-13 20:22:26.091102451 +0800
+++ OpenWrt-UEFI-Support/src/package/base-files/files/lib/upgrade/common.sh	2020-02-13 20:26:13.000000000 +0800
@@ -125,6 +125,25 @@
 		esac
 
 		case "$rootpart" in
+			PARTUUID=[A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9]-[A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9][A-F0-9])
+				uuid="${disk#PARTUUID=}"
+				uuid="${uuid}"
+				export BOOTPART=$(blkid | grep "PARTUUID=" | {
+					local pdisk puuid
+					while read -r line
+					do
+					        pdisk=${line%%:*}
+					        puuid=${line##*PARTUUID=\"}
+					        puuid=${puuid%%\"*}
+						puuid=$(echo "$puuid" | tr '[a-z]' '[A-Z]')
+						if [ "$uuid" = "$puuid" ]; then
+							echo -n "${pdisk%[0-9]}1"
+							return 0
+						fi
+					done
+				})
+				return 0
+			;;
 			PARTUUID=[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]-[a-f0-9][a-f0-9])
 				uuid="${rootpart#PARTUUID=}"
 				uuid="${uuid%-[a-f0-9][a-f0-9]}"
@@ -137,51 +156,31 @@
 				done
 			;;
 			/dev/*)
-				uevent="/sys/class/block/${rootpart##*/}/../uevent"
-			;;
-			0x[a-f0-9][a-f0-9][a-f0-9] | 0x[a-f0-9][a-f0-9][a-f0-9][a-f0-9] | \
-			[a-f0-9][a-f0-9][a-f0-9] | [a-f0-9][a-f0-9][a-f0-9][a-f0-9])
-				rootpart=0x${rootpart#0x}
-				for class in /sys/class/block/*; do
-					while read line; do
-						export -n "$line"
-					done < "$class/uevent"
-					if [ $((rootpart/256)) = $MAJOR -a $((rootpart%256)) = $MINOR ]; then
-						uevent="$class/../uevent"
-					fi
-				done
+				export BOOTPART="${disk%[0-9]}1"
+				return 0
 			;;
 		esac
-
-		if [ -e "$uevent" ]; then
-			while read line; do
-				export -n "$line"
-			done < "$uevent"
-			export BOOTDEV_MAJOR=$MAJOR
-			export BOOTDEV_MINOR=$MINOR
-			return 0
-		fi
 	fi
 
 	return 1
 }
 
-export_partdevice() {
-	local var="$1" offset="$2"
-	local uevent line MAJOR MINOR DEVNAME DEVTYPE
-
-	for uevent in /sys/class/block/*/uevent; do
-		while read line; do
-			export -n "$line"
-		done < "$uevent"
-		if [ $BOOTDEV_MAJOR = $MAJOR -a $(($BOOTDEV_MINOR + $offset)) = $MINOR -a -b "/dev/$DEVNAME" ]; then
-			export "$var=$DEVNAME"
-			return 0
-		fi
-	done
-
-	return 1
-}
+# export_partdevice() {
+# 	local var="$1" offset="$2"
+# 	local uevent line MAJOR MINOR DEVNAME DEVTYPE
+#
+# 	for uevent in /sys/class/block/*/uevent; do
+# 		while read line; do
+# 			export -n "$line"
+# 		done < "$uevent"
+# 		if [ $BOOTDEV_MAJOR = $MAJOR -a $(($BOOTDEV_MINOR + $offset)) = $MINOR -a -b "/dev/$DEVNAME" ]; then
+# 			export "$var=$DEVNAME"
+# 			return 0
+# 		fi
+# 	done
+#
+# 	return 1
+# }
 
 hex_le32_to_cpu() {
 	[ "$(echo 01 | hexdump -v -n 2 -e '/2 "%x"')" = "3031" ] && {
